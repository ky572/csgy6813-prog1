"""
This security layer inadequately handles A/B storage for files in RepyV2.



Note:
    This security layer uses encasementlib.r2py, restrictions.default, repy.py and Python
    Also you need to give it an application to run.
    python repy.py restrictions.default encasementlib.r2py [security_layer].r2py [attack_program].r2py

    """
TYPE="type"
ARGS="args"
RETURN="return"
EXCP="exceptions"
TARGET="target"
FUNC="func"
OBJC="objc"

class BackupFile:
  def __init__(self,filename,create):
    self.name = filename+".a"
    self.file = openfile(self.name,create)
    if create and self.file.readat(1,0) == "":
      self.file.writeat("SE",0)

  def readat(self,sizelimit,offset):
    return self.file.readat(sizelimit,offset)

  def commit(self,data):
    self.file.close()
    if is_valid_data(data):
      commit_file = set_file_data(self.name,data)
      commit_file.close()


class BufferFile:
  def __init__(self,filename,data):
    self.name = filename+".b"
    self.file = set_file_data(self.name,data)

  def writeat(self,data,offset):
    self.file.writeat(data,offset)

  def flush(self):
    data = self.file.readat(None,0)
    self.file.close()
    if is_valid_data(data):
      return data
    else:
      return ""

class ABFile():
  def __init__(self,filename,create):
    self.backup = BackupFile(filename,create)
    self.buffer = BufferFile(filename,self.backup.readat(None,0))

  def writeat(self,data,offset):
    self.buffer.writeat(data,offset)

  def readat(self,sizelimit,offset):
    return self.backup.readat(sizelimit,offset)

  def close(self):
    buffer_data = self.buffer.flush()
    self.backup.commit(buffer_data)

def ABopenfile(filename, create):
  return ABFile(filename,create)

def is_valid_data(data):
  return data.startswith("S") and data.endswith("E")

def set_file_data(filename,data):
  try:
    removefile(filename)
  except FileNotFoundError:
    pass

  file = openfile(filename,True)
  file.writeat(data,0)
  return file




# The code here sets up type checking and variable hiding for you.  You
# should not need to change anything below here.
sec_file_def = {"obj-type":ABFile,
                "name":"ABFile",
                "writeat":{"type":"func","args":(str,(int,long)),"exceptions":Exception,"return":(int,type(None)),"target":ABFile.writeat},
                "readat":{"type":"func","args":((int,long,type(None)),(int,long)),"exceptions":Exception,"return":str,"target":ABFile.readat},
                "close":{"type":"func","args":None,"exceptions":None,"return":(bool,type(None)),"target":ABFile.close}
           }

CHILD_CONTEXT_DEF["ABopenfile"] = {TYPE:OBJC,ARGS:(str,bool),EXCP:Exception,RETURN:sec_file_def,TARGET:ABopenfile}

# Execute the user code
secure_dispatch_module()
